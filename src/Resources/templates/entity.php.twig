<?php

declare(strict_types=1);

namespace {{ namespace }};

{% for import in imports %}
use {{ import }};
{% endfor %}

/**
 * Entité {{ entity_name }} générée automatiquement.
 * Table: {{ table_name }}
 */
{% if use_annotations %}
/**
 * @ORM\Entity(repositoryClass="{{ namespace|replace({'\\Entity': '\\Repository'}) }}\{{ repository_name }}")
 * @ORM\Table(name="{{ table_name }}")
 */
{% else %}
#[ORM\Entity(repositoryClass: {{ namespace|replace({'\\Entity': '\\Repository'}) }}\{{ repository_name }}::class)]
#[ORM\Table(name: '{{ table_name }}')]
{% endif %}
class {{ entity_name }}
{
{% for property in properties %}
    /**
     * {{ property.comment ? property.comment : 'Propriété ' ~ property.name }}
     */
{% if use_annotations %}
{% if property.is_primary %}
    /**
     * @ORM\Id
{% if property.auto_increment %}
     * @ORM\GeneratedValue
{% endif %}
     * @ORM\Column(type="{{ property.doctrine_type }}"{% if property.length %}, length={{ property.length }}{% endif %}{% if not property.nullable %}, nullable=false{% endif %})
     */
{% else %}
    /**
     * @ORM\Column(type="{{ property.doctrine_type }}"{% if property.length %}, length={{ property.length }}{% endif %}{% if property.nullable %}, nullable=true{% endif %}{% if property.default is not null %}, options={"default": "{{ property.default }}"}{% endif %})
     */
{% endif %}
{% else %}
{% if property.is_primary %}
    #[ORM\Id]
{% if property.auto_increment %}
    #[ORM\GeneratedValue]
{% endif %}
    #[ORM\Column(type: '{{ property.doctrine_type }}'{% if property.length %}, length: {{ property.length }}{% endif %}{% if not property.nullable %}, nullable: false{% endif %})]
{% else %}
    #[ORM\Column(type: '{{ property.doctrine_type }}'{% if property.length %}, length: {{ property.length }}{% endif %}{% if property.nullable %}, nullable: true{% endif %}{% if property.default is not null %}, options: ['default' => '{{ property.default }}']{% endif %})]
{% endif %}
{% endif %}
    private {% if property.nullable and property.type != 'bool' %}?{% endif %}{{ property.type }} ${{ property.name }}{% if property.default is not null and property.type == 'string' %} = '{{ property.default }}'{% elseif property.default is not null %} = {{ property.default }}{% elseif property.nullable %} = null{% endif %};

{% endfor %}
{% for relation in relations %}
    /**
     * Relation {{ relation.type }} vers {{ relation.target_entity }}
     */
{% if use_annotations %}
    /**
     * @ORM\ManyToOne(targetEntity="{{ relation.target_entity }}")
     * @ORM\JoinColumn(name="{{ relation.local_columns[0] }}", referencedColumnName="{{ relation.foreign_columns[0] }}"{% if relation.on_delete %}, onDelete="{{ relation.on_delete }}"{% endif %})
     */
{% else %}
    #[ORM\ManyToOne(targetEntity: {{ relation.target_entity }}::class)]
    #[ORM\JoinColumn(name: '{{ relation.local_columns[0] }}', referencedColumnName: '{{ relation.foreign_columns[0] }}'{% if relation.on_delete %}, onDelete: '{{ relation.on_delete }}'{% endif %})]
{% endif %}
    private {% if relation.nullable %}?{% endif %}{{ relation.target_entity }} ${{ relation.property_name }}{% if relation.nullable %} = null{% endif %};

{% endfor %}
{% for property in properties %}
    /**
     * Getter pour {{ property.name }}
     */
    public function {{ property.getter_name }}(): {% if property.nullable and property.type != 'bool' %}?{% endif %}{{ property.type }}
    {
        return $this->{{ property.name }};
    }

    /**
     * Setter pour {{ property.name }}
     */
    public function {{ property.setter_name }}({% if property.nullable and property.type != 'bool' %}?{% endif %}{{ property.type }} ${{ property.name }}): static
    {
        $this->{{ property.name }} = ${{ property.name }};
        return $this;
    }

{% endfor %}
{% for relation in relations %}
    /**
     * Getter pour la relation {{ relation.property_name }}
     */
    public function {{ relation.getter_name }}(): {% if relation.nullable %}?{% endif %}{{ relation.target_entity }}
    {
        return $this->{{ relation.property_name }};
    }

    /**
     * Setter pour la relation {{ relation.property_name }}
     */
    public function {{ relation.setter_name }}({% if relation.nullable %}?{% endif %}{{ relation.target_entity }} ${{ relation.property_name }}): static
    {
        $this->{{ relation.property_name }} = ${{ relation.property_name }};
        return $this;
    }

{% endfor %}
}